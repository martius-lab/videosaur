experiment_group: dinosaur
experiment_name: coco_base14_dinov2

globals:
  INPUT_TYPE: image
  NUM_SLOTS: 7
  SLOT_DIM: 256
  VIT_MODEL: vit_base_patch14_dinov2
  FEAT_DIM: "${config_prop: VIT_PARAMS, ${.VIT_MODEL}, FEAT_DIM}"
  NUM_PATCHES: "${config_prop: VIT_PARAMS, ${.VIT_MODEL}, NUM_PATCHES}"
  NUM_GPUS: 1
  BATCH_SIZE_PER_GPU: 64
  TOTAL_BATCH_SIZE: "${mul: ${.NUM_GPUS}, ${.BATCH_SIZE_PER_GPU}}"
  BASE_LR: 0.0002

trainer:
  max_steps: 500000
  log_every_n_steps: 200
  val_check_interval: 2500
  gradient_clip_val: 1.0

optimizer:
  name: Adam
  # Scale learning rate by batch size: 1e-4 for every 32 samples
  lr: "${eval: 'a / 32 * b', ${globals.TOTAL_BATCH_SIZE}, ${globals.BASE_LR}}"
  lr_scheduler:
    name: exp_decay_with_warmup
    warmup_steps: 10000
    decay_steps: 100000

model:
  input_type: ${globals.INPUT_TYPE}
  visualize: true
  visualize_every_n_steps: 10000

  initializer:
    name: RandomInit
    n_slots: ${globals.NUM_SLOTS}
    dim: ${globals.SLOT_DIM}

  encoder:
    backbone:
      name: TimmExtractor
      model: ${globals.VIT_MODEL}
      features: vit_block12
      frozen: true
      pretrained: true
      model_kwargs:
        dynamic_img_size: True
    output_transform:
      name: networks.two_layer_mlp
      inp_dim: ${globals.FEAT_DIM}
      outp_dim: ${globals.SLOT_DIM}
      hidden_dim: "${mul: ${globals.FEAT_DIM}, 2}"
      layer_norm: true

  grouper:
    name: SlotAttention
    inp_dim: ${globals.SLOT_DIM}
    slot_dim: ${globals.SLOT_DIM}
    n_iters: 3
    use_mlp: true

  decoder:
    name: MLPDecoder
    inp_dim: ${globals.SLOT_DIM}
    outp_dim: ${globals.FEAT_DIM}
    hidden_dims: [2048, 2048, 2048]
    n_patches: ${globals.NUM_PATCHES}

val_metrics:
  image_ari:
    name: ImageARI
    ignore_overlaps: true
    pred_key: decoder_masks_hard
    true_key: segmentations
  image_mbo:
    name: ImageIoU
    ignore_overlaps: true
    matching: overlap
    pred_key: decoder_masks_hard
    true_key: segmentations

dataset:
  train_shards: "coco/coco-train-{000000..000924}.tar"
  val_shards: "coco/coco-validation-{000000..000039}.tar"
  batch_size: ${globals.BATCH_SIZE_PER_GPU}
  val_size: 5000
  num_workers: 4
  num_val_workers: 1
  train_pipeline:
    name: ${globals.INPUT_TYPE}
    keys: [image]
    is_video_dataset: false
    shuffle_size: 2048
    transforms:
      name: coco_train
      crop_type: short_side_resize_random
      type: ${globals.INPUT_TYPE}
      input_size: 224
      h_flip_prob: 0.5
  val_pipeline:
    name: ${globals.INPUT_TYPE}
    keys: [image, segmentations]
    is_video_dataset: false
    transforms:
      name: coco_val
      crop_type: central
      type: ${globals.INPUT_TYPE}
      input_size: 224
      num_classes: 63
